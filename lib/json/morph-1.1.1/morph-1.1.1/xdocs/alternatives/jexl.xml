<?xml version="1.0"?>
<!--
/*
 * Copyright 2001-2004 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *			http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 -->

<document>

	<properties>
		<title>Comparison with JEXL</title>
		<author email="sgarlatm@lists.sourceforge.net">Matt Sgarlata</author>
	</properties>

	<body>
		<section name="Comparison with JEXL">

			<p><a href="http://jakarta.apache.org/commons/jexl/">JEXL</a> solves some of the same problems that Morph does.  Specifically, the <a href="../apidocs/net/sf/morph/lang/Language.html">Language</a> notion in Morph allows you to receive and set information in arbitrary objects.  However, it doesn't allow you to execute arbitrary methods on Java objects, which is something that JEXL does support.  An extension to the Language interface that supports this may be provided after Morph 1.0 is released.</p>

			<subsection name="JEXL Example">
				<pre>
// Create an expression object
String jexlExp = "foo.innerFoo.bar()";
Expression e = ExpressionFactory.createExpression( jexlExp );

// Create a context and add data
JexlContext jc = JexlHelper.createContext();
jc.getVars().put("foo", new Foo() );

// Now evaluate the expression, getting the result
Object o = e.evaluate(jc);
				</pre>
			</subsection>

			<subsection name="Morph Example">
				<pre>
// Just do it :)
Object o = Morph.get(new Foo(), "innerFoo.bar()");
				</pre>
			</subsection>

		</section>
	</body>
</document>

